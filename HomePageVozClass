package pageClasses;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class HomePageVozClass {
	WebDriver driver;
	WebDriverWait wait;

	// Element
	@FindBy(css = "#stanicaod")
	WebElement stanicaOdField;

	@FindBy(css = "#stanicado")
	WebElement stanicaDoField;

	@FindBy(css = ".dropdown-menu") // Dropdown meni
	WebElement dropdownMenu;

	@FindBy(css = ".dropdown-menu li") // Opcije u dropdownu
	List<WebElement> stationSuggestions;

	@FindBy(css = "[ng-click=\"open()\"]")
	WebElement clickCalendar;

	@FindBy(css = ".btn.btn-default.btn-sm.pull-right.uib-right")
	WebElement arrowRight;

	@FindBy(css = ".btn.btn-default.btn-sm.active")
	WebElement clickFirstDay;

	@FindBy(css = "#btntrazi")
	WebElement clickButtonTrazi;

	@FindBy(xpath = "//*[@id=\"main\"]/div/div[1]/div/ng-view/div/div/div[3]/div[3]/table/tbody/tr[2]/td[6]/div[1]")
	List<WebElement> izaberiDugmad;

	@FindBy(linkText = "DALJE ¬ª")
	WebElement daljeButton;

	// Konstruktor
	public HomePageVozClass(WebDriver driver) {
		this.driver = driver;
		wait = new WebDriverWait(driver, Duration.ofSeconds(10));
		PageFactory.initElements(driver, this);
	}

	// Metod
	public void selectStation(WebElement stationField, String inputText, String fullStation) {
		stationField.click(); // Klik na polje
		stationField.clear(); // Brisanje sadr≈æaja ako ga ima
		stationField.sendKeys(inputText); // Upisivanje slova

		try {
			// ƒåekanje da se pojavi makar jedna stavka u dropdownu
			wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".dropdown-menu li")));

			// Uƒçitavanje svih opcija u dropdownu
			List<WebElement> suggestions = driver.findElements(By.cssSelector(".dropdown-menu li"));

			if (suggestions.isEmpty()) {
				System.out.println("‚ö† Nema pronaƒëenih stanica, poku≈°avam ENTER.");
				stationField.sendKeys(Keys.ENTER);
				return;
			}

			for (WebElement suggestion : suggestions) {
				System.out.println("üîπ Opcija: " + suggestion.getText()); // Debug ispis
				if (suggestion.getText().trim().equalsIgnoreCase(fullStation)) {
					wait.until(ExpectedConditions.elementToBeClickable(suggestion));
					suggestion.click();
					System.out.println("‚úÖ Kliknuto na: " + fullStation);
					return;
				}
			}

			// Ako opcija nije pronaƒëena, poku≈°avamo ENTER
			System.out.println("‚ö† Stanica nije pronaƒëena u dropdown-u, poku≈°avam ENTER.");
			stationField.sendKeys(Keys.ENTER);
		} catch (Exception e) {
			System.out.println("‚ùå Dropdown se nije pojavio, poku≈°avam ENTER.");
			stationField.sendKeys(Keys.ENTER);
		}

	}

	// Metoda za unos obe stanice
	public void enterStations() {
		selectStation(stanicaOdField, "be", "Beograd Centar");
		selectStation(stanicaDoField, "no", "Novi Sad");
	}

	public void openLeftCalendar() {
		wait.until(ExpectedConditions.elementToBeClickable(clickCalendar));
		clickCalendar.click();
	}

	public void clickArrowRight() {
		wait.until(ExpectedConditions.elementToBeClickable(arrowRight));
		arrowRight.click();
	}

	public void firstDayClick() {
		wait.until(ExpectedConditions.elementToBeClickable(clickFirstDay));
		clickFirstDay.click();
	}

	public void trazuButtonClick() {
		wait.until(ExpectedConditions.elementToBeClickable(clickButtonTrazi));
		clickButtonTrazi.click();
	}

	public void klikNaIzaberi() {
		try {
			// ƒåekaj da makar jedno dugme postane vidljivo
			wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(By.xpath(
					"//*[@id=\"main\"]/div/div[1]/div/ng-view/div/div/div[3]/div[3]/table/tbody/tr[2]/td[6]/div[1]")));

			if (izaberiDugmad.isEmpty()) {
				System.out.println("‚ùå Nema dugmadi za izaberi.");
				return;
			}

			// Petlja kroz sva pronaƒëena dugmad
			for (WebElement dugme : izaberiDugmad) {
				if (dugme.isDisplayed() && dugme.isEnabled()) {
					dugme.click();
					System.out.println("‚úÖ Kliknuto na dugme!");
					return;
				}
			}

			System.out.println("‚ö† Nema vidljivih dugmadi za klik.");
		} catch (Exception e) {
			System.out.println("‚ùå Gre≈°ka prilikom klika na dugme: " + e.getMessage());
		}
	}
}
