package pageClasses;

import java.time.Duration;
import java.util.List;

import org.openqa.selenium.By;
import org.openqa.selenium.Keys;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class HomePageVozClass {
	WebDriver driver;
	WebDriverWait wait;

	// ===============================
	// Web Elements (Page Object Model)
	// ===============================

	@FindBy(css = "#stanicaod")
	WebElement stanicaOdField;

	@FindBy(css = "#stanicado")
	WebElement stanicaDoField;

	@FindBy(css = ".dropdown-menu")
	WebElement dropdownMenu;

	@FindBy(css = ".dropdown-menu li")
	List<WebElement> stationSuggestions;

	@FindBy(css = "[ng-click=\"open()\"]")
	WebElement clickCalendar;

	@FindBy(css = ".btn.btn-default.btn-sm.pull-right.uib-right")
	WebElement arrowRight;

	@FindBy(css = ".btn.btn-default.btn-sm.active")
	WebElement clickFirstDay;

	@FindBy(css = "#btntrazi")
	WebElement clickButtonTrazi;

	@FindBy(xpath = "//*[@id=\"main\"]/div/div[1]/div/ng-view/div/div/div[3]/div[3]/table/tbody/tr[2]/td[6]/div[1]")
	List<WebElement> izaberiDugmad;

	@FindBy(linkText = "DALJE ¬ª")
	WebElement daljeButton;

	// ===============================
	// Constructor
	// ===============================

	public HomePageVozClass(WebDriver driver) {
		this.driver = driver;
		wait = new WebDriverWait(driver, Duration.ofSeconds(10));
		PageFactory.initElements(driver, this);
	}

	// ===============================
	// Methods / Page Actions
	// ===============================

	/**
	 * Selects a station by typing partial input, then matching full station name
	 * from dropdown suggestions.
	 *
	 * @param stationField  WebElement for input field
	 * @param inputText     Text to type into the field
	 * @param fullStation   Full name of the station to select
	 */
	public void selectStation(WebElement stationField, String inputText, String fullStation) {
		stationField.click();
		stationField.clear();
		stationField.sendKeys(inputText);

		try {
			wait.until(ExpectedConditions.presenceOfElementLocated(By.cssSelector(".dropdown-menu li")));

			List<WebElement> suggestions = driver.findElements(By.cssSelector(".dropdown-menu li"));

			if (suggestions.isEmpty()) {
				System.out.println("‚ö† No station suggestions found, trying ENTER.");
				stationField.sendKeys(Keys.ENTER);
				return;
			}

			for (WebElement suggestion : suggestions) {
				System.out.println("üîπ Option: " + suggestion.getText());
				if (suggestion.getText().trim().equalsIgnoreCase(fullStation)) {
					wait.until(ExpectedConditions.elementToBeClickable(suggestion));
					suggestion.click();
					System.out.println("‚úÖ Clicked: " + fullStation);
					return;
				}
			}

			System.out.println("‚ö† Station not found in dropdown, trying ENTER.");
			stationField.sendKeys(Keys.ENTER);
		} catch (Exception e) {
			System.out.println("‚ùå Dropdown did not appear, trying ENTER.");
			stationField.sendKeys(Keys.ENTER);
		}
	}

	/**
	 * Fills in both departure and arrival stations using predefined values.
	 */
	public void enterStations() {
		selectStation(stanicaOdField, "be", "Beograd Centar");
		selectStation(stanicaDoField, "no", "Novi Sad");
	}

	/**
	 * Opens the calendar popup.
	 */
	public void openLeftCalendar() {
		wait.until(ExpectedConditions.elementToBeClickable(clickCalendar)).click();
	}

	/**
	 * Clicks the right arrow to navigate to next month in the calendar.
	 */
	public void clickArrowRight() {
		wait.until(ExpectedConditions.elementToBeClickable(arrowRight)).click();
	}

	/**
	 * Clicks on the first available day in the calendar.
	 */
	public void firstDayClick() {
		wait.until(ExpectedConditions.elementToBeClickable(clickFirstDay)).click();
	}

	/**
	 * Clicks the search button ("Tra≈æi") to submit search query.
	 */
	public void trazuButtonClick() {
		wait.until(ExpectedConditions.elementToBeClickable(clickButtonTrazi)).click();
	}

	/**
	 * Clicks on the first available "Izaberi" (Select) button, if visible.
	 */
	public void klikNaIzaberi() {
		try {
			wait.until(ExpectedConditions.presenceOfAllElementsLocatedBy(
				By.xpath("//*[@id=\"main\"]/div/div[1]/div/ng-view/div/div/div[3]/div[3]/table/tbody/tr[2]/td[6]/div[1]")));

			if (izaberiDugmad.isEmpty()) {
				System.out.println("‚ùå No 'Izaberi' buttons found.");
				return;
			}

			for (WebElement dugme : izaberiDugmad) {
				if (dugme.isDisplayed() && dugme.isEnabled()) {
					dugme.click();
					System.out.println("‚úÖ Clicked on 'Izaberi' button.");
					return;
				}
			}

			System.out.println("‚ö† No visible 'Izaberi' buttons to click.");
		} catch (Exception e) {
			System.out.println("‚ùå Error while clicking 'Izaberi' button: " + e.getMessage());
		}
	}
}
